!function(){"use strict";const t=window.location.search.includes("ab_debug=true");function e(...e){t&&console.log("[A/B Test Debug]",...e)}const o="ab_test_session",i="ab_test_active";function n(){if(e("Attempting product ID detection..."),window.ShopifyAnalytics&&window.ShopifyAnalytics.meta&&window.ShopifyAnalytics.meta.product&&window.ShopifyAnalytics.meta.product.gid){const t=window.ShopifyAnalytics.meta.product.gid;return console.log("[A/B Test] Product ID detected:",t,"(via ShopifyAnalytics)"),t}if(window.__st&&window.__st.rid){const t="gid://shopify/Product/"+window.__st.rid;return console.log("[A/B Test] Product ID detected:",t,"(via __st)"),t}const t=document.querySelector('meta[property="og:product:id"]');if(t&&t.content){const e="gid://shopify/Product/"+t.content;return console.log("[A/B Test] Product ID detected:",e,"(via meta tag)"),e}const o=document.querySelector('form[action*="/cart/add"]');if(o){const t=o.querySelector('input[name="id"]');if(t&&t.value){const e="gid://shopify/Product/"+t.value;return console.log("[A/B Test] Product ID detected:",e,"(via cart form - may be variant ID)"),e}}const i=window.location.pathname.match(/\/products\/([^\/]+)/);if(i&&i[1]){const t="handle:"+i[1];return console.log("[A/B Test] Product ID detected:",t,"(via URL - handle only)"),t}return console.warn("[A/B Test] Could not detect product ID using any strategy"),e("Available globals:",{ShopifyAnalytics:!!window.ShopifyAnalytics,__st:!!window.__st,metaTags:document.querySelectorAll('meta[property*="product"]').length}),null}function a(t){if(!t||!t.length)return!1;let e=0;const o=new Set;return[".product__media img",".product__media-image-wrapper img",".product-media-container img",".product-single__photo img",".product-single__photo-wrapper img",".product__main-photos img",".product__slides img",".product__photo img",".product-image img",".product-images img",".product-photo img",".product-photos img",".product-gallery img",".product-slider img",".main-product-image img","[data-product-image]","[data-product-featured-image]","[data-image-id] img",'.product img[src*="/products/"]',".product-wrapper img",".product-container img",".slick-slide img",".slick-track img",".swiper-slide img",".flickity-viewport img",".gallery img",".image-gallery img",".product-thumbnails img"].forEach(i=>{try{document.querySelectorAll(i).forEach((i,n)=>{o.has(i)||n<t.length&&(i.dataset.originalSrc||(i.dataset.originalSrc=i.src),i.src=t[n],i.srcset&&(i.dataset.originalSrcset=i.srcset,i.srcset=""),i.dataset.src&&(i.dataset.originalDataSrc=i.dataset.src,i.dataset.src=t[n]),"lazy"===i.loading&&(i.loading="eager"),o.add(i),e++)})}catch(t){}}),e>0&&function(t){if(!window.MutationObserver)return;let e;const o=new MutationObserver(function(o){clearTimeout(e),e=setTimeout(function(){a(t)},50)});o.observe(document.body,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["src","data-src"]}),setTimeout(function(){o.disconnect()},5e3)}(t),e>0}async function s(t,i=1){const n=function(){let t=localStorage.getItem(o);return t?e("Existing session ID:",t):(t="session_"+Math.random().toString(36).substr(2,16)+Date.now().toString(36),localStorage.setItem(o,t),e("New session ID created:",t)),t}(),a="/apps/model-swap/variant/"+encodeURIComponent(t)+"?session="+n;e("Fetching variant from:",a,"Attempt:",i);try{const t=await fetch(a,{method:"GET",headers:{Accept:"application/json"}});if(e("Response status:",t.status),!t.ok)throw new Error("HTTP "+t.status);const o=await t.json();return e("Variant data received:",o),o}catch(o){return i<3?(e("Retrying... attempt",i+1),await new Promise(t=>setTimeout(t,100*i)),s(t,i+1)):(console.error("[A/B Test] Failed to fetch variant after",3,"attempts:",o),null)}}async function r(){if(console.log("[A/B Test] Initializing on page:",window.location.pathname),!window.location.pathname.includes("/products/"))return void e("Not a product page, skipping A/B test");const t=n();if(t)try{const o=await s(t);if(o&&o.variant&&o.imageUrls&&o.testId){console.log("[A/B Test] Active test found:",o.testId,"Variant:",o.variant,"Images:",o.imageUrls.length);a(o.imageUrls)?(sessionStorage.setItem(i,JSON.stringify({testId:o.testId,variant:o.variant,productId:t})),console.log("[A/B Test] ✅ Images replaced successfully")):(console.warn("[A/B Test] ⚠️ Failed to replace images - selectors may not match theme"),e("Image URLs attempted:",o.imageUrls))}else console.log("[A/B Test] No active test for this product"),e("API response:",o)}catch(t){console.error("[A/B Test] ❌ Initialization failed:",t)}}console.log("[A/B Test] Script loaded and initialized",t?"(debug mode ON)":""),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",r):setTimeout(r,0),window.addEventListener("load",function(){const t=sessionStorage.getItem(i);if(t)try{const e=JSON.parse(t);setTimeout(function(){const t=n();t===e.productId&&s(t).then(function(t){t&&t.imageUrls&&a(t.imageUrls)})},100)}catch(t){}})}();